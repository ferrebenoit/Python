buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.hidetake:gradle-ssh-plugin:2.8.0'
  }
}
/////////////////Pygradle section/////////////////////////////////////////////
// to generate skel of documentation : sphinx-apidoc -o docs switchhandler
plugins {
    id "com.linkedin.python-sdist" version "0.4.9"
    //id "com.linkedin.python" version "0.4.9"
}

repositories {
    pyGradlePyPi()

//    ivy {
//    name 'pypi-local'   //optional, but nice
//    url 'https://pypi.python.org/simple/'
//    layout "pattern", {
//      ivy "[module]/[module]-[revision].ivy"
//      artifact "[module]/[module]-[revision].tar.gz"
//      m2compatible = true
//    }

	// Import packages
	// java -jar C:\Users\ferreb\Downloads\pivy-importer-0.4.9-all.jar --repo C:\LOGICIEL\pypi ptyprocess:0.5.1
    ivy {
    name 'pypi-local'   //optional, but nice
    url 'c:/LOGICIEL/pypi'
    layout "pattern", {
      ivy "[organisation]/[module]/[revision]/[module]-[revision].ivy"
      artifact "[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier]).[ext]"
      m2compatible = true
    }
  }
}

dependencies {
    python 'pypi:pexpect:4.2.1'
    python 'pypi:ptyprocess:0.5.1'
    //python 'pypi:packaging:16.8'
    //python 'pypi:appdirs:1.4.3'
    //test 'pypi:mock:1.3.0'
}

python {
	srcDir = project.file('switchhandler').path

    //forceVersion('pypi', 'setuptools', '35.0.2')
}

version = '1.3'
//////////////////////////////////////////////////////////////////////////////
apply plugin: 'org.hidetake.ssh'

ssh.settings {
  //knownHosts = allowAnyHosts
  //dryRun = true
}

remotes {
  squidanalyser {
    host = '172.18.2.31'
    //host = '127.0.0.1'
    user = 'root'
    password = 'password'
    //identity = file('id_rsa')
    knownHosts = allowAnyHosts
  }
}

task deploysources  {
	doLast {    
      ssh.run {
        session(remotes.squidanalyser) {
        	execute 'mkdir -p /opt/cd60/python'
			put from: 'scripts', into: '/opt/cd60/python', filter: {it.name =~ /.py$/}
			put from: 'utils', into: '/opt/cd60/python', filter: {it.name =~ /.py$/}
			execute 'chmod 755 /opt/cd60/python/scripts/*' 
			execute 'dos2unix /opt/cd60/python/scripts/*' 
      }
    }
  }
}

task deploydocs  {
	doLast {    
      ssh.run {
        session(remotes.squidanalyser) {
        	execute 'mkdir -p /opt/cd60/python'
			put from: 'documentation', into: '/opt/cd60/python'
      }
    }
  }
}


task deployresources  {
	doLast {    
      ssh.run {
        session(remotes.squidanalyser) {
        	execute 'mkdir -p /opt/cd60/python'
			put from: 'resources', into: '/opt/cd60/python'
      }
    }
  }
}
  
task deployall  {
	doLast {    
		tasks.deploysources.execute()
		tasks.deploydocs.execute()
		tasks.deployresources.execute()
	}
}

task builddoc (type:Exec){
	doFirst { 
		workingDir 'documentation/'
		commandLine 'C:/Users/ferreb/Documents/dev/Python/documentation/make.bat', 'html'
    }

}
  
